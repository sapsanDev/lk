<?php

namespace app\models;

use app\models\DbModel;
use app\models\Admin;

class Ajax extends DbModel{
	
	public function pay($post){
		$Admin = new Admin;
		$Kassa = $Admin->satKassaOn();
		if(empty($Kassa))
			$this->message('–ü—Ä–æ—Å—Ç–∏ –±—Ä–∞—Ç–æ–∫, –Ω–æ –∫–∞–∂–µ—Ç—Å—è –ê–¥–º–∏–Ω –∑–∞–±—ã–ª –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞—Å—Å—É –¥–ª—è –æ–ø–ª–∞—Ç—ã ¬Ø\_(„ÉÑ)_/¬Ø','Error');
		else if(empty($post['kassa']))
				$this->message('–¢—ã –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Ç–æ –≤—ã–±–µ—Ä–∏!','Error');
		else if(!preg_match('/^\d+$/i', $post['kassa']))
				$this->message('–ú–∏—à–∞ –≤—Å–µ —Ö—É–π–Ω—è! –î–∞–≤–∞–π –ø–æ –Ω–æ–≤–æ–π!','Error');
		else if(empty($post['summ']))
				$this->message('–ò –∫–∞–∫ –∂–µ —Ç—ã —Å–æ–±—Ä–∞–ª—Å—è –±–µ–∑ –¥–µ–Ω–µ–≥?','Error');
		else if(!preg_match('/^[0-9]{1,5}.[0-9]{1,2}$/', $this->WM($post['summ'])))
				$this->message('–ù—É —á—É–≤–∞–∫, —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ 10 –ª–∏–±–æ —Å —Ç–æ—á–∫–æ–π 10.84!','Error');
		else if($post['summ'] < 10)
				$this->message('–ú–∏–Ω–∏–º—É–º —á–µ—Ä–≤–æ–Ω–µ—Ü –±—Ä–∞—Ç–æ–∫!','Error');
		else if(empty($post['steam']))
				$this->message('–Ø –Ω–µ –í–∞–Ω–≥–∞ Steam ID —Ç–≤–æ–π –Ω–µ —É–∑–Ω–∞—é!','Error');
		else if(!preg_match('/STEAM_[0-9]{1,2}:[0-1]:\d+/i',$post['steam']))
				$this->message('–ß—Ç–æ —Ç—ã –º–Ω–µ –∫–∞–∫—É—é-—Ç–æ –¥–∏—á—å –∑–∞–≥–æ–Ω—è–µ—à—å, –∞ –Ω–µ —Å–≤–æ–π Steam ID!','Error');
		else if(!empty($post['promo'])){
			if(!preg_match('/^[A-z-0-9]{5,15}$/',$post['promo']))
				$this->message('–≠—Ç–æ —á—Ç–æ –ø—Ä–æ–º–æ–∫–æ–¥—ã —Ç–∞–∫–∏–µ —Å—Ç–∞–ª–∏ –¥–∞–≤–∞—Ç—å? –í–≤–µ–¥–∏ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π!','Error');
			$this->checkPromo($post['promo'],$post['steam']);
		}
		$Admin->existsKassa($post['kassa']);
		$this->setPay($post);
	}

	protected function setPay($post){
		$data = $this->DataKassa($post['kassa']);
		$order = time() % 100000;
		$desc = 'LK WEB - –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è '.$post['steam'];
		$lk_sign = $this->Encoder($post['kassa'].','.$order.','.$post['summ'].','.$post['steam']);
		switch ($post['kassa']) {
			case 1:
				if(empty($data['status']))
					$this->message('–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ FreeKassa –≤—ã–∫–ª—é—á–µ–Ω –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º','Error');
				$this->recPay($order,$post,'FreeKassa');
				$sign = md5($data['shop_id'].':'.$post['summ'].':'.$data['secret_key_1'].':'.$order);
				$this->location('http://www.free-kassa.ru/merchant/cash.php?m='.$data['shop_id'].'&oa='.$post['summ'].'&o='.$order.'&s='.$sign.'&us_sign='.$lk_sign);
				break;
			case 2:
				if(empty($data['status']))
					$this->message('–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ InterKassa –≤—ã–∫–ª—é—á–µ–Ω –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º','Error');
					$this->recPay($order,$post,'InterKassa');
					$this->message('<form  method="post" action="https://sci.interkassa.com/"><input name="ik_co_id" value="'.$data['shop_id'].'"><input name="ik_pm_no" value="'.$order.'"><input name="ik_x_sign" value="'.$lk_sign.'"><input name="ik_cur" value="RUB"><input name="ik_desc" value="'.$desc.'"><input name="ik_am"  value="'.$post['summ'].'"><input id="punsh" type="submit"></form>','');
				break;
			case 3:
				if(empty($data['status']))
					$this->message('–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ RoboKassa –≤—ã–∫–ª—é—á–µ–Ω –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º','Error');
					$this->recPay($order,$post,'RoboKassa');
					$sign = md5($data['shop_id'].':'.$post['summ'].':'.$order.':'.$data['secret_key_1'].':Shp_mysign='.$lk_sign);
					$this->message('<form action="https://merchant.roboxchange.com/Index.aspx" method=POST><input name="MrchLogin" value="'.$data['shop_id'].'"><input name="OutSum" value="'.$post['summ'].'"><input name="SignatureValue" value="'.$sign.'"><input name="InvId" value="'.$order.'"><input name="Desc" value="'.$desc.'"><input name="Shp_mysign" value="'.$lk_sign.'"><input id="punsh" type="submit" ></form>','');
				break;
			case 4:
				if(empty($data['status']))
					$this->message('–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ UnitPay –≤—ã–∫–ª—é—á–µ–Ω –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º','Error');
					$this->recPay($order,$post,'UnitPay');
					$sign = hash('sha256', $lk_sign.'{up}RUB{up}'.$desc.'{up}'.$post['summ'].'{up}'.$data['secret_key_2']);
					$this->message('<form action="https://unitpay.ru/pay/'.$data['secret_key_1'].'" method=GET><input name="sum" value="'.$post['summ'].'">
						<input name="account" value="'.$lk_sign.'"><input name="signature" value="'.$sign.'"><input name="desc" value="'.$desc.'"><input name="currency" value="RUB"><input id="punsh" type="submit" ></form>','');
				break;
			case 6:
				if(empty($data['status']))
					$this->message('–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ YandexMoney –≤—ã–∫–ª—é—á–µ–Ω –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º','Error');
					$this->recPay($order,$post,'YandexMoney');
					$lk_sign = $this->Encoder($post['kassa'].','.$order.','.$post['summ'].','.$post['steam']);
					$this->message('<form method="POST" action="https://money.yandex.ru/quickpay/confirm.xml"> 
    				<input name="receiver" value="'.$data['shop_id'].'"><input name="quickpay-form" value="shop"><input name="targets" value="'.$desc.'"> 
    				<input name="paymentType" value="PC"><input name="label" value="'.$lk_sign.'"> 
    				<input name="sum" value="'.$post['summ'].'"><input id="punsh" type="submit"></form>','');
				break;
			case 7:
				if(empty($data['status']))
					$this->message('–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ YandexMoney(–∫–∞—Ä—Ç–∞) –≤—ã–∫–ª—é—á–µ–Ω –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º','Error');
					$this->recPay($order,$post,'YandexMoney(–∫–∞—Ä—Ç–∞)');
					$lk_sign = $this->Encoder($post['kassa'].','.$order.','.$post['summ'].','.$post['steam']);
					$this->message('<form method="POST" action="https://money.yandex.ru/quickpay/confirm.xml"> 
    				<input name="receiver" value="'.$data['shop_id'].'"><input name="quickpay-form" value="shop"><input name="targets" value="'.$desc.'"> 
    				<input name="paymentType" value="AC"><input name="label" value="'.$lk_sign.'"> 
    				<input name="sum" value="'.$post['summ'].'"><input id="punsh" type="submit"></form>','');
				break;
			case 8:
				if(empty($data['status']))
					$this->message('–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ WebMoney –≤—ã–∫–ª—é—á–µ–Ω –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º','Error');
					$this->recPay($order,$post,'WebMoney');
					$this->message('<form action="https://merchant.webmoney.ru/lmi/payment.asp" method="POST">
 					<input name="lk_sign" value="'.$lk_sign.'"><input name="LMI_PAYMENT_DESC_BASE64" value="'.base64_encode($desc).'"><input name="LMI_PAYMENT_NO" value="'.$order.'">
 					<input name="LMI_PAYEE_PURSE" value="'.$data['shop_id'].'"><input name="LMI_PAYMENT_AMOUNT" value="'.$post['summ'].'"><input id="punsh" type="submit"></form>','');
				break;	
			case 9:
				if(empty($data['status']))
					$this->message('–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ PayPal –≤—ã–∫–ª—é—á–µ–Ω –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º','Error');
					$this->recPay($order,$post,'PayPal');
					$lk_sign = $this->Encoder($post['kassa'].','.$order.','.$this->WM($post['summ']).','.$post['steam']);
					$this->message('<form action="https://www.paypal.com/cgi-bin/webscr" method="post"><input type="hidden" name="cmd" value="_xclick">
									  <input type="hidden" name="business" value="'.$data['shop_id'].'"><input type="hidden" name="notify_url" value="'.$data['secret_key_1'].'"><input type="hidden" name="item_name" value="'.$desc.'"><input type="hidden" name="item_number" value="'.$lk_sign.'">
									  <input type="hidden" name="amount" value="'.$this->WM($post['summ']).'"><input type="hidden" name="currency_code" value="EUR"><input id="punsh" type="submit" name="submit"></form>','');
			case 10:
				if(empty($data['status']))
					$this->message('–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ Qiwi –≤—ã–∫–ª—é—á–µ–Ω –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º','Error');
					$this->recPay($order,$post,'Qiwi');
					$lk_sign = $this->Encoder($post['kassa'].','.$order.','.$this->WM($post['summ']).','.$post['steam']);
					$this->message('<form action="https://oplata.qiwi.com/create" method="GET"><input type="hidden" name="publicKey" value="'.$data['secret_key_1'].'"><input type="hidden" name="comment" value="'.$desc.'"><input type="hidden" name="account" value="'.$lk_sign.'"><input type="hidden" name="amount" value="'.$this->WM($post['summ']).'"><input type="hidden" name="successUrl" value="http://'.$_SERVER["HTTP_HOST"].$_SERVER["REQUEST_URI"].'">
						<input id="punsh" type="submit" name="submit"></form>','');
				break;			
			
			default:
				$this->message('–û—à–∏–±–∫–∞','Error');
				break;
		}

	}

	protected function checkPromo($promo,$steam){
		$param = ['code' => $promo];
		$codeInfo = $this->db->row('SELECT * FROM lk_promocodes WHERE code = :code', $param);
		if(empty($codeInfo))
			$this->message('–£–≤–µ—Ä–µ–Ω —á—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª? –ß—Ç–æ-—Ç–æ —è —Ç–∞–∫–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ –Ω–∞—à–µ–ª!','Error');
		else if($codeInfo[0]['attempts'] <= 0)
			$this->message('–ü—Ä–æ—Å—Ç–∏ –±—Ä–∞—Ç–∞–Ω, –Ω–æ –ª–∏–º–∏—Ç –∫–æ–¥–∞ –∏—Å—á–µ—Ä–ø–∞–Ω!','Error');
		else if($codeInfo[0]['auth1']){
			preg_match('/:[0-9]{1}:\d+/i', $steam, $auth);
			$params = ['code'=>$promo,'auth' => '%'.$auth[0].'%'];
			$userPromo = $this->db->one('SELECT pay_promo FROM lk_pays WHERE pay_promo=:code AND pay_status = 1 AND pay_auth LIKE :auth', $params);
			if($userPromo)
				$this->message('–ë—Ä–∞—Ç–∞–Ω –Ω—É –Ω–µ –Ω–∞–≥–ª–µ–π, —Ç—ã –∂–µ —É–∂–µ –≤–≤–æ–¥–∏–ª —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥!','Error');
		}
	}

	public function calcPromo($promo,$steam,$summ){
		if($summ < 10)exit (trim(json_encode(array(
							'result' => '<div class="mess_error">–ú–∏–Ω–∏–º—É–º —á–µ—Ä–≤–æ–Ω–µ—Ü –±—Ä–∞—Ç–æ–∫!</div>'
						))));

		else if(!preg_match('/STEAM_[0-9]{1,2}:[0-1]:\d+/i',$steam))
				exit (trim(json_encode(array(
							'result' => '<div class="mess_error">üò° –•–≤–∞—Ç–∏—Ç –≤–±–∏–≤–∞—Ç—å –≤ SteamID –≤—Å—è–∫—É—é –¥–∏—á—å! üò°</div>'
						))));
		else if($summ >=10 && !empty($steam)){
			$param = ['code' => $promo];
			$codeInfo = $this->db->row('SELECT * FROM lk_promocodes WHERE code = :code', $param);
			if(empty($codeInfo))
				exit (trim(json_encode(array(
							'result' => '<div class="mess_warn">üôÖ‚Äç‚ôÇ –ú–∏—à–∞ –≤—Å–µ —Ö—É–π–Ω—è! –î–∞–≤–∞–π –ø–æ –Ω–æ–≤–æ–π –ø—Ä–æ–º–æ–∫–æ–¥! üôÖ‚Äç‚ôÇ</div>'
						))));
			else if($codeInfo[0]['attempts'] <= 0)
				exit (trim(json_encode(array(
							'result' => '<div class="mess_warn">–ü—Ä–æ—Å—Ç–∏ –±—Ä–∞—Ç–∞–Ω, –Ω–æ –ª–∏–º–∏—Ç –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∏—Å—á–µ—Ä–ø–∞–Ω!<br>¬Ø\_(„ÉÑ)_/¬Ø</div>'
						))));
			else if($codeInfo[0]['auth1']){
				preg_match('/:[0-9]{1}:\d+/i', $steam, $auth);
				$params = ['code'=>$promo,'auth' => '%'.$auth[0].'%'];
				$userPromo = $this->db->one('SELECT pay_promo FROM lk_pays WHERE pay_promo=:code AND pay_status = 1 AND pay_auth LIKE :auth', $params);
				if($userPromo)
					exit (trim(json_encode(array(
							'result' => '<div class="mess_error">ü§¶–ë–ª—è –Ω—É –Ω–µ –Ω–∞–≥–ª–µ–π, —Ç—ã —É–∂–µ –≤–≤–æ–¥–∏–ª —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥!ü§¶</div>'
						))));
			}
			$bonus = ($summ/100)*$codeInfo[0]['percent'];
			$nsumm = $bonus+$summ;
			exit (trim(json_encode(array(
						'result' => '<div class="mess_good">–° –ø—Ä–æ–º–æ–∫–æ–¥–æ–º –í—ã –ø–æ–ª—É—á–∏—Ç–µ <b style="color:green">'.$nsumm.'</b> —Ä—É–±. –Ω–∞ –±–∞–ª–∞–Ω—Å!<br>
									–ü—Ä–æ–º–æ–∫–æ–¥ –¥–∞–µ—Ç <b style="color:green">+'.$codeInfo[0]['percent'].'%</b> –∫ —Å—É–º–º–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è!</div>'
					))));

		}
	}

	protected function recPay($order,$post,$system){
		$params = ['order'		=> $order,
					'auth'		=> $post['steam'],
					'summ'		=> $post['summ'],
					'data'		=> date('d.m.Y –≤ H:i:s'),
					'system'	=> $system,
					'promo'		=> $post['promo'],
					'confirm'	=> 0,
				];
		$this->db->query('INSERT INTO lk_pays (pay_order, pay_auth, pay_summ, pay_data, pay_system, pay_promo, pay_status) VALUES(:order,:auth,:summ,:data,:system,:promo,:confirm)',$params);
	}

	protected function DataKassa($post){
			$param =['id'=> $post];
		$server = $this->db->row('SELECT * FROM lk_pay_service WHERE id = :id', $param);
		if(empty($server ))
			$this->message('–¢–∞–∫–æ–π –∫–∞—Å—Å—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç','Error');
		return $server[0];
	}
	protected function Encoder($string){
		$return = base64_encode(base64_encode($string));
		return $return;
	}
protected function WM($summ){
	$ita = explode('.', $summ);
	if(COUNT($ita) == 1){
		$summa = $ita[0].'.00';
	}else{
		$summa = $summ;
	}
	return $summa;
}

}